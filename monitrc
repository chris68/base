### Setting for mailwitch; append these to /etc/monit/monitrc


set daemon  60 WITH START DELAY 15           # Poll at 1-minute intervals but only start after 15 seconds (before monit status will not answer!)
set logfile syslog facility log_daemon # Set syslog logging 
                                        # (facility LOG_DAEMON)

set mailserver localhost
set mail-format           # Set a default mail from-address for
  { 
    subject: Monit system notification ($SERVICE $EVENT at $DATE)
    from: postmaster@mailwitch.com
  }  # all alert messages emitted by monit
  
set alert prod_monit@mailwitch.com  with reminder on 100 cycles # Send alert to system admin on any event (with reminder)

set httpd port 2812 and
        use address localhost
        allow localhost

set eventqueue
      basedir /var/monit
      slots 5000
      
#System checks

check system $HOST
	if memory usage > 80% for 2 cycles then alert
	if cpu usage (user) > 70% for 2 cycles then alert
        if cpu usage (system) > 30% then alert
 	if cpu usage (wait) > 20% then alert
	if loadavg (1min) > 6 for 2 cycles then alert 
	if loadavg (5min) > 4 for 2 cycles then alert
	if swap usage > 5% then alert

#Log files

# Check if the backup script raised on error
check file syslog with path /var/log/syslog
        ignore content = "monit" # otherwise the logs from monit are reevaluated again and again!
        if content = "pg_backup.*ERROR" then alert

# check file system
check filesystem rootfs with path /
       if space usage > 80% then alert
       
check filesystem backup.remote with path /home/mailwitch/gdrive_mailwitch

#Important base processes
#Use this only until the systems have a proper systemd config for restart themselves (see https://mmonit.com/wiki/Monit/Systemd for a sample)
  
  check process postgresql with pidfile /var/run/postgresql/10-main.pid
    group server
    start program = "/usr/sbin/service postgresql start"
    stop program = "/usr/sbin/service postgresql stop"

  check process postfix with pidfile /var/spool/postfix/pid/master.pid
    group server
    start program = "/usr/sbin/service postfix start"
    stop program = "/usr/sbin/service postfix stop"
    depends on postgresql
  
  check process apache with pidfile /var/run/apache2/apache2.pid
    group server
    start program = "/usr/sbin/service apache2 start"
    stop program = " /usr/sbin/service apache2 stop"
    depends on postgresql

  check process php-fpm with pidfile /run/php/php7.2-fpm.pid
    group server
    start program = "/usr/sbin/service php7.2-fpm start"
    stop program = "/usr/sbin/service php7.2-fpm stop"
    depends on apache
